[{"C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\index.js":"1","C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\App.js":"2","C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\pages\\Home\\Home.js":"3","C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\utility\\Navbar\\Navbar.js":"4","C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\utility\\Footer\\Footer.js":"5","C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\pages\\Signup\\Signup.js":"6","C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\pages\\Signin\\Signin.js":"7","C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\js\\alerts.js":"8","C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\pages\\Signup\\Activate.js":"9","C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\utility\\helper\\helpers.js":"10","C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\pages\\protected\\protect.js":"11","C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\pages\\protected\\privateRoute.js":"12","C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\pages\\protected\\PrivateRoute.js":"13","C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\pages\\Protected\\PrivateRoute.js":"14","C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\pages\\Protected\\protect.js":"15","C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\pages\\Admin\\AdminRoute.js":"16","C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\pages\\Admin\\Admin.js":"17","C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\pages\\Protected\\Protect.js":"18","C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\pages\\ForgotPassword\\ForgotPassword.js":"19","C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\pages\\ResetPassword\\ResetPassword.js":"20","C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\pages\\Google\\Google.js":"21","C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\pages\\Facebook\\Facebook.js":"22"},{"size":219,"mtime":1609986411615,"results":"23","hashOfConfig":"24"},{"size":1456,"mtime":1610682846185,"results":"25","hashOfConfig":"24"},{"size":1312,"mtime":1610215925490,"results":"26","hashOfConfig":"24"},{"size":2720,"mtime":1610499005384,"results":"27","hashOfConfig":"24"},{"size":762,"mtime":1609991582969,"results":"28","hashOfConfig":"24"},{"size":3452,"mtime":1610657098114,"results":"29","hashOfConfig":"24"},{"size":3666,"mtime":1610760102381,"results":"30","hashOfConfig":"24"},{"size":408,"mtime":1610404156429,"results":"31","hashOfConfig":"24"},{"size":1927,"mtime":1610407898984,"results":"32","hashOfConfig":"24"},{"size":1900,"mtime":1610655202450,"results":"33","hashOfConfig":"24"},{"size":4306,"mtime":1610497147021,"results":"34","hashOfConfig":"24"},{"size":571,"mtime":1610494771792,"results":"35","hashOfConfig":"24"},{"size":571,"mtime":1610494771792,"results":"36","hashOfConfig":"24"},{"size":571,"mtime":1610494771792,"results":"37","hashOfConfig":"24"},{"size":4306,"mtime":1610497147021,"results":"38","hashOfConfig":"24"},{"size":596,"mtime":1610487365452,"results":"39","hashOfConfig":"24"},{"size":4472,"mtime":1610656059645,"results":"40","hashOfConfig":"24"},{"size":4517,"mtime":1610655296203,"results":"41","hashOfConfig":"24"},{"size":2170,"mtime":1610682415298,"results":"42","hashOfConfig":"24"},{"size":2748,"mtime":1610684739878,"results":"43","hashOfConfig":"24"},{"size":1626,"mtime":1610755985116,"results":"44","hashOfConfig":"24"},{"size":1199,"mtime":1610761970557,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1nkakll",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"48"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\index.js",[],["100","101"],"C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\App.js",[],"C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\pages\\Home\\Home.js",["102"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Signup from \"../Signup/Signup\";\r\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n// import { faGoogle } from \"@fortawesome/free-brands-svg-icons\";\r\n// import { library } from \"@fortawesome/fontawesome-svg-core\";\r\n// library.add(faGoogle);\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className='container'>\r\n      <div className='flex-algin-evenly margin-top'>\r\n        <header>\r\n          <h1 className='primary-heading md'>\r\n            <span className='primary-color'>G</span>\r\n            <span className='secondary-color'>o</span>\r\n            <span className='tertiary-color'>o</span>\r\n            <span className='primary-color'>g</span>\r\n            <span className='quaternary-color'>l</span>\r\n            <span className='secondary-color'>e</span>\r\n            <span className='primary-color padding'>OAuth 2.0</span>\r\n          </h1>\r\n        </header>\r\n        <section className='card-section'>\r\n          <div className='card margin-top flex-align-center'>\r\n            <h1 className='secondary-heading secondary-color md'>\r\n              Sign up to get started\r\n            </h1>\r\n            <Signup />\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Home;\r\n","C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\utility\\Navbar\\Navbar.js",[],"C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\utility\\Footer\\Footer.js",[],"C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\pages\\Signup\\Signup.js",["103"],"import React, { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { isAuth } from \"../../utility/helper/helpers\";\r\nimport { showAlert } from \"../../js/alerts\";\r\nimport axios from \"axios\";\r\n\r\nfunction Signup() {\r\n  const [values, setValues] = useState({\r\n    name: \"Denny\",\r\n    email: \"Dfeng415@yahoo.com\",\r\n    password: \"123456\",\r\n    buttonText: \"Submit\",\r\n  });\r\n\r\n  const { name, email, password, buttonText } = values;\r\n\r\n  const handleChange = (name) => (event) => {\r\n    // grab different values based on their name located in  values\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n  const handleSubmit = async (event) => {\r\n    // stop the page from reloading\r\n    event.preventDefault();\r\n    const url = `${process.env.REACT_APP_API}/signup`;\r\n    const data = { name, email, password };\r\n    // change button text when form is being submitted\r\n    setValues({ ...values, buttonText: \"Submitting\" });\r\n\r\n    // get request from backend\r\n    await axios\r\n      .post(url, data)\r\n      .then((res) => {\r\n        console.log(\"SIGN UP SUCCESSFULLY\", res);\r\n        console.log(res.data.message);\r\n        // clean state\r\n        setValues({\r\n          ...values,\r\n          name: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          buttonText: \"Submitted\",\r\n        });\r\n        // toast.success(res.data.message);\r\n        if (res.data.status === \"success\") {\r\n          showAlert(\"success\", res.data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"SIGN UP ERROR\", err.response.data.message);\r\n\r\n        setValues({\r\n          ...values,\r\n          buttonText: \"Submit\",\r\n        });\r\n\r\n        showAlert(\"error\", err.response.data.message);\r\n      });\r\n  };\r\n\r\n  const SignupForm = () => {\r\n    return (\r\n      <form>\r\n        <div className='form-group'>\r\n          <label htmlFor='name' className='form-label xsm'>\r\n            Name\r\n          </label>\r\n          <input\r\n            onChange={handleChange(\"name\")}\r\n            value={name}\r\n            id='name'\r\n            type='text'\r\n            className='form-input'\r\n            name='name'\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <label htmlFor='email' className='form-label xsm'>\r\n            Email\r\n          </label>\r\n          <input\r\n            onChange={handleChange(\"email\")}\r\n            value={email}\r\n            id='email'\r\n            type='email'\r\n            className='form-input'\r\n            name='email'\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <label htmlFor='password' className='form-label xsm'>\r\n            Password\r\n          </label>\r\n          <input\r\n            onChange={handleChange(\"password\")}\r\n            value={password}\r\n            id='password'\r\n            type='password'\r\n            className='form-input'\r\n            name='password'\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <button className='btn-primary xsm' onClick={handleSubmit}>\r\n            {buttonText}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isAuth() && isAuth().role === \"admin\" ? (\r\n        <Redirect to='/protected-admin' />\r\n      ) : isAuth() && isAuth().role === \"subscriber\" ? (\r\n        <Redirect to='/protected' />\r\n      ) : null}\r\n      {SignupForm()}\r\n    </div>\r\n  );\r\n}\r\nexport default Signup;\r\n","C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\pages\\Signin\\Signin.js",["104"],"import React, { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { authenticate, isAuth } from \"../../utility/helper/helpers\";\r\nimport { showAlert } from \"../../js/alerts\";\r\nimport axios from \"axios\";\r\nimport Google from \"../Google/Google\";\r\nimport Facebook from \"../Facebook/Facebook\";\r\n\r\nfunction Signin({ history }) {\r\n  const [values, setValues] = useState({\r\n    email: \"Dfeng415@yahoo.com\",\r\n    password: \"123456\",\r\n    buttonText: \"Submit\",\r\n  });\r\n\r\n  const { email, password, buttonText } = values;\r\n\r\n  const handleChange = (name) => (event) => {\r\n    // grab different values based on their name located in  values\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  const informParent = (res) => {\r\n    authenticate(res, () => {\r\n      isAuth() && isAuth().role === \"admin\"\r\n        ? history.push(\"/protected-admin\")\r\n        : history.push(\"/protected\");\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    // stop the page from reloading\r\n    event.preventDefault();\r\n    const url = `${process.env.REACT_APP_API}/signin`;\r\n    const data = { email, password };\r\n    // change button text when form is being submitted\r\n    setValues({ ...values, buttonText: \"Submitting\" });\r\n\r\n    // get request from backend\r\n    await axios\r\n      .post(url, data)\r\n      .then((res) => {\r\n        console.log(\"SIGNIN SUCCESSFULLY\", res);\r\n        authenticate(res, () => {\r\n          // clean state\r\n          setValues({\r\n            ...values,\r\n            email: \"\",\r\n            password: \"\",\r\n            buttonText: \"Submitted\",\r\n          });\r\n          // if (res.data.status === \"success\" ) {\r\n          //   showAlert(\"success\", `Hey ${res.data.user.name}, Welcome back!`);\r\n          // }\r\n          isAuth() && isAuth().role === \"admin\"\r\n            ? history.push(\"/protected-admin\")\r\n            : history.push(\"/protected\");\r\n        });\r\n      })\r\n\r\n      .catch((err) => {\r\n        console.log(\"SIGNIN ERROR\", err);\r\n\r\n        setValues({\r\n          ...values,\r\n          buttonText: \"Submit\",\r\n        });\r\n        showAlert(\"error\", err.response.data.message);\r\n      });\r\n  };\r\n\r\n  const SigninForm = () => {\r\n    return (\r\n      <form>\r\n        <h1>Welcome back!</h1>\r\n        <Google informParent={informParent} />\r\n        <Facebook informParent={informParent} />\r\n        <div className='form-group'>\r\n          <label htmlFor='email' className='form-label xsm'>\r\n            Email\r\n          </label>\r\n          <input\r\n            onChange={handleChange(\"email\")}\r\n            value={email}\r\n            id='email'\r\n            type='email'\r\n            className='form-input'\r\n            name='email'\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <label htmlFor='password' className='form-label xsm'>\r\n            Password\r\n          </label>\r\n          <input\r\n            onChange={handleChange(\"password\")}\r\n            value={password}\r\n            id='password'\r\n            type='password'\r\n            className='form-input'\r\n            name='password'\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <button className='btn-primary xsm' onClick={handleSubmit}>\r\n            {buttonText}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* check if user is signed in  */}\r\n      {isAuth() && isAuth().role === \"admin\" ? (\r\n        <Redirect to='/protected-admin' />\r\n      ) : isAuth() && isAuth().role === \"subscriber\" ? (\r\n        <Redirect to='/protected' />\r\n      ) : null}\r\n      {SigninForm()}\r\n    </div>\r\n  );\r\n}\r\nexport default Signin;\r\n","C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\js\\alerts.js",[],"C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\pages\\Signup\\Activate.js",["105","106","107","108"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { showAlert } from \"../../js/alerts\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport axios from \"axios\";\r\n\r\n// match comes from browser router\r\nfunction Activate({ match }) {\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    token: \"\",\r\n    show: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    // App.js path='/auth/activate/:token'\r\n    let token = match.params.token;\r\n    // grab the users name from the registered token data\r\n    let { name } = jwt.decode(token);\r\n    if (token) {\r\n      setValues({ ...values, name, token });\r\n    }\r\n  }, []);\r\n\r\n  const { name, token, show } = values;\r\n\r\n  const handleSubmit = async (event) => {\r\n    // stop the page from reloading\r\n    event.preventDefault();\r\n    const url = `${process.env.REACT_APP_API}/account-activation`;\r\n    const data = { token };\r\n    // get request from backend\r\n    await axios\r\n      .post(url, data)\r\n      .then((res) => {\r\n        console.log(\"Account has been activated\", res);\r\n        console.log(res.data.message);\r\n        // clean state\r\n        setValues({\r\n          ...values,\r\n          show: false,\r\n        });\r\n        // toast.success(res.data.message);\r\n        if (res.data.status === \"success\") {\r\n          showAlert(\"success\", res.data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"ACCOUNT ACTIVATION ERROR\", err.response.data.message);\r\n        showAlert(\"error\", err.response.data.message);\r\n      });\r\n  };\r\n\r\n  const activationLink = () => {\r\n    return (\r\n      <div className='form-group'>\r\n        <h1>Hello {name}, please activate your account to get started! </h1>\r\n        <button class='btn-primary xsm' onClick={handleSubmit}>\r\n          Activate Account\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return <div>{activationLink()}</div>;\r\n}\r\nexport default Activate;\r\n","C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\utility\\helper\\helpers.js",[],"C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\pages\\protected\\protect.js",[],"C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\pages\\protected\\privateRoute.js",[],"C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\pages\\protected\\PrivateRoute.js",[],"C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\pages\\Protected\\PrivateRoute.js",[],"C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\pages\\Protected\\protect.js",["109"],"C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\pages\\Admin\\AdminRoute.js",[],"C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\pages\\Admin\\Admin.js",["110","111"],"/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport {\r\n  isAuth,\r\n  getCookie,\r\n  logout,\r\n  updateUser,\r\n} from \"../../utility/helper/helpers\";\r\nimport { showAlert } from \"../../js/alerts\";\r\nimport axios from \"axios\";\r\n\r\nfunction Admin({ history }) {\r\n  const [values, setValues] = useState({\r\n    role: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    buttonText: \"Update\",\r\n  });\r\n\r\n  const token = getCookie(\"token\");\r\n\r\n  useEffect(() => {\r\n    loadProfile();\r\n  }, []);\r\n\r\n  const loadProfile = () => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: `${process.env.REACT_APP_API_USER}/${isAuth()._id}`,\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(\"PRIVATE PROFILE UPDATE\", response.data);\r\n        const { role, name, email } = response.data;\r\n        setValues({ ...values, role, name, email });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"PRIVATE PROFILE UPDATE ERROR\", error);\r\n        if (error.response.status === 401) {\r\n          logout(() => {\r\n            history.push(\"/\");\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  const { name, email, password, buttonText, role } = values;\r\n\r\n  const handleChange = (name) => (event) => {\r\n    // grab different values based on their name located in  values\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n  const handleSubmit = async (event) => {\r\n    // stop the page from reloading\r\n    event.preventDefault();\r\n    // change button text when form is being submitted\r\n    setValues({ ...values, buttonText: \"Updating\" });\r\n\r\n    // get request from backend\r\n    await axios({\r\n      method: \"PUT\",\r\n      url: `${process.env.REACT_APP_API_USER}/admin/update`,\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      data: { name, password },\r\n    })\r\n      .then((res) => {\r\n        console.log(\"PROFILE UPDATED SUCCESSFULLY\", res);\r\n        console.log(res.data.message);\r\n        updateUser(res, () => {\r\n          // clean state\r\n          setValues({\r\n            ...values,\r\n            buttonText: \"Updated\",\r\n          });\r\n          if (res.data.status === \"success\") {\r\n            showAlert(\"success\", res.data.message);\r\n          }\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"PROFILE UPDATEDERROR\", err.response.data.message);\r\n        setValues({\r\n          ...values,\r\n          buttonText: \"Update\",\r\n        });\r\n\r\n        showAlert(\"error\", err.response.data.message);\r\n      });\r\n  };\r\n\r\n  const UpdateForm = () => {\r\n    return (\r\n      <form>\r\n        <h1>Update Profile</h1>\r\n        <div className='form-group'>\r\n          <label htmlFor='role' className='form-label xsm'>\r\n            Role\r\n          </label>\r\n          <input\r\n            defaultValue={role}\r\n            id='role'\r\n            type='text'\r\n            className='form-input'\r\n            name='role'\r\n            disabled\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <label htmlFor='name' className='form-label xsm'>\r\n            Name\r\n          </label>\r\n          <input\r\n            onChange={handleChange(\"name\")}\r\n            value={name}\r\n            id='name'\r\n            type='text'\r\n            className='form-input'\r\n            name='name'\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <label htmlFor='email' className='form-label xsm'>\r\n            Email\r\n          </label>\r\n          <input\r\n            defaultValue={email}\r\n            id='email'\r\n            type='email'\r\n            className='form-input'\r\n            name='email'\r\n            disabled\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <label htmlFor='password' className='form-label xsm'>\r\n            Password\r\n          </label>\r\n          <input\r\n            onChange={handleChange(\"password\")}\r\n            value={password}\r\n            id='password'\r\n            type='password'\r\n            className='form-input'\r\n            name='password'\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <button className='btn-primary xsm' onClick={handleSubmit}>\r\n            {buttonText}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  };\r\n\r\n  return <div>{UpdateForm()}</div>;\r\n}\r\nexport default Admin;\r\n","C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\pages\\Protected\\Protect.js",["112","113"],"/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport {\r\n  isAuth,\r\n  getCookie,\r\n  logout,\r\n  updateUser,\r\n} from \"../../utility/helper/helpers\";\r\nimport { showAlert } from \"../../js/alerts\";\r\nimport axios from \"axios\";\r\n\r\nfunction Protect({ history }) {\r\n  const [values, setValues] = useState({\r\n    role: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    buttonText: \"Update\",\r\n  });\r\n\r\n  const token = getCookie(\"token\");\r\n\r\n  useEffect(() => {\r\n    loadProfile();\r\n  }, []);\r\n\r\n  const loadProfile = () => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: `${process.env.REACT_APP_API_USER}/${isAuth()._id}`,\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(\"PRIVATE PROFILE UPDATE\", response.data);\r\n        const { role, name, email } = response.data;\r\n        setValues({ ...values, role, name, email });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"PRIVATE PROFILE UPDATE ERROR\", error);\r\n        if (error.response.status === 401) {\r\n          logout(() => {\r\n            history.push(\"/\");\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  const { name, email, password, buttonText, role } = values;\r\n\r\n  const handleChange = (name) => (event) => {\r\n    // grab different values based on their name located in  values\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n  const handleSubmit = async (event) => {\r\n    // stop the page from reloading\r\n    event.preventDefault();\r\n    // change button text when form is being submitted\r\n    setValues({ ...values, buttonText: \"Updating\" });\r\n\r\n    // get request from backend\r\n    await axios({\r\n      method: \"PUT\",\r\n      url: `${process.env.REACT_APP_API_USER}/update`,\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      data: { name, password },\r\n    })\r\n      .then((res) => {\r\n        console.log(\"PROFILE UPDATED SUCCESSFULLY\", res);\r\n        console.log(res.data.message);\r\n        updateUser(res, () => {\r\n          // clean state\r\n          setValues({\r\n            ...values,\r\n            buttonText: \"Updated\",\r\n          });\r\n          // toast.success(res.data.message);\r\n          if (res.data.status === \"success\") {\r\n            showAlert(\"success\", res.data.message);\r\n          }\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"PROFILE UPDATEDERROR\", err.response.data.message);\r\n        setValues({\r\n          ...values,\r\n          buttonText: \"Update\",\r\n        });\r\n\r\n        showAlert(\"error\", err.response.data.message);\r\n      });\r\n  };\r\n\r\n  const UpdateForm = () => {\r\n    return (\r\n      <form>\r\n        <h1>Update Profile</h1>\r\n        <div className='form-group'>\r\n          <label htmlFor='role' className='form-label xsm'>\r\n            Role\r\n          </label>\r\n          <input\r\n            defaultValue={role}\r\n            id='role'\r\n            type='text'\r\n            className='form-input'\r\n            name='role'\r\n            disabled\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <label htmlFor='name' className='form-label xsm'>\r\n            Name\r\n          </label>\r\n          <input\r\n            onChange={handleChange(\"name\")}\r\n            value={name}\r\n            id='name'\r\n            type='text'\r\n            className='form-input'\r\n            name='name'\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <label htmlFor='email' className='form-label xsm'>\r\n            Email\r\n          </label>\r\n          <input\r\n            defaultValue={email}\r\n            id='email'\r\n            type='email'\r\n            className='form-input'\r\n            name='email'\r\n            disabled\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <label htmlFor='password' className='form-label xsm'>\r\n            Password\r\n          </label>\r\n          <input\r\n            onChange={handleChange(\"password\")}\r\n            value={password}\r\n            id='password'\r\n            type='password'\r\n            className='form-input'\r\n            name='password'\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <button className='btn-primary xsm' onClick={handleSubmit}>\r\n            {buttonText}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  };\r\n\r\n  return <div>{UpdateForm()}</div>;\r\n}\r\nexport default Protect;\r\n","C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\pages\\ForgotPassword\\ForgotPassword.js",["114","115"],"import React, { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { showAlert } from \"../../js/alerts\";\r\nimport axios from \"axios\";\r\n\r\nfunction ForgotPassword() {\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    buttonText: \"Request Password Link\",\r\n  });\r\n\r\n  const { email, buttonText } = values;\r\n\r\n  const handleChange = (name) => (event) => {\r\n    // grab different values based on their name located in  values\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n  const handleSubmit = async (event) => {\r\n    // stop the page from reloading\r\n    event.preventDefault();\r\n    const url = `${process.env.REACT_APP_API}/forgot-password`;\r\n    const data = { email };\r\n    // change button text when form is being submitted\r\n    setValues({ ...values, buttonText: \"Submitting\" });\r\n\r\n    // get request from backend\r\n    await axios\r\n      .put(url, data)\r\n      .then((res) => {\r\n        console.log(\"FORGOT PASSWORD SUCCESSFULLY\", res);\r\n        showAlert(\"success\", res.data.message);\r\n        setValues({\r\n          ...values,\r\n          buttonText: \"Requested\",\r\n        });\r\n      })\r\n\r\n      .catch((err) => {\r\n        console.log(\"FORGOT PASSWORD ERROR\", err);\r\n        showAlert(\"error\", err.response.data.message);\r\n        setValues({\r\n          ...values,\r\n          buttonText: \"Request Password Link\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const ForgotPasswordForm = () => {\r\n    return (\r\n      <form>\r\n        <h1>Forgot Password</h1>\r\n        <div className='form-group'>\r\n          <label htmlFor='email' className='form-label xsm'>\r\n            Email\r\n          </label>\r\n          <input\r\n            onChange={handleChange(\"email\")}\r\n            value={email}\r\n            id='email'\r\n            type='email'\r\n            className='form-input'\r\n            name='email'\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <button className='btn-primary xsm' onClick={handleSubmit}>\r\n            {buttonText}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  };\r\n\r\n  return <div>{ForgotPasswordForm()}</div>;\r\n}\r\nexport default ForgotPassword;\r\n","C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\pages\\ResetPassword\\ResetPassword.js",["116"],"/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { showAlert } from \"../../js/alerts\";\r\nimport { useHistory } from \"react-router\";\r\nimport axios from \"axios\";\r\n\r\n//  destructure  props.match from react-router-dom\r\nfunction ResetPassword({ match }) {\r\n  const history = useHistory();\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    token: \"\",\r\n    newPassword: \"\",\r\n    buttonText: \"Reset Password\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    let token = match.params.token;\r\n    let { name } = jwt.decode(token);\r\n    if (token) {\r\n      setValues({ ...values, name, token });\r\n    }\r\n  }, []);\r\n\r\n  const { name, token, newPassword, buttonText } = values;\r\n\r\n  const handleChange = (event) => {\r\n    setValues({ ...values, newPassword: event.target.value });\r\n  };\r\n  const handleSubmit = async (event) => {\r\n    // stop the page from reloading\r\n    event.preventDefault();\r\n    const url = `${process.env.REACT_APP_API}/reset-password`;\r\n    const data = { newPassword, resetPasswordLink: token };\r\n    // change button text when form is being submitted\r\n    setValues({ ...values, buttonText: \"Resetting\" });\r\n\r\n    // get request from backend\r\n    await axios\r\n      .put(url, data)\r\n      .then((res) => {\r\n        console.log(\"RESET PASSWORD SUCCESSFULLY\", res);\r\n        showAlert(\"success\", res.data.message);\r\n        setValues({\r\n          ...values,\r\n          buttonText: \"Done\",\r\n        });\r\n        setTimeout(() => {\r\n          history.push(\"/signin\");\r\n        }, 2000);\r\n      })\r\n\r\n      .catch((err) => {\r\n        console.log(\"RESET PASSWORD ERROR\", err);\r\n        showAlert(\"error\", err.response.data.message);\r\n        setValues({\r\n          ...values,\r\n          buttonText: \"Reset Password\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const ResetPasswordForm = () => {\r\n    return (\r\n      <form>\r\n        <h1>Hello {name}, reset your password</h1>\r\n        <div className='form-group'>\r\n          <label htmlFor='password' className='form-label xsm'>\r\n            New Password\r\n          </label>\r\n          <input\r\n            onChange={handleChange}\r\n            value={newPassword}\r\n            id='password'\r\n            type='password'\r\n            className='form-input'\r\n            name='password'\r\n            placeholder='Type new password'\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <button className='btn-primary xsm' onClick={handleSubmit}>\r\n            {buttonText}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  };\r\n\r\n  return <div>{ResetPasswordForm()}</div>;\r\n}\r\nexport default ResetPassword;\r\n","C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\pages\\Google\\Google.js",["117","118"],"import React from \"react\";\r\nimport axios from \"axios\";\r\nimport GoogleLogin from \"react-google-login\";\r\nimport { authenticate, isAuth } from \"../../utility/helper/helpers\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGoogle } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nlibrary.add(faGoogle);\r\n\r\nfunction Google({ informParent = (i) => i }) {\r\n  const responseGoogle = (res) => {\r\n    console.log(res.tokenId);\r\n    const url = `${process.env.REACT_APP_API}/google-login`;\r\n    const data = { idToken: res.tokenId };\r\n    axios\r\n      .post(url, data)\r\n      .then((res) => {\r\n        console.log(\"GOOGLE SIGNIN SUCCESS!\", res);\r\n        // inform parent componenet\r\n        informParent(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"GOOGLE SIGNIN ERROR!\", err.res);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <GoogleLogin\r\n        clientId={`${process.env.REACT_APP_GOOGLE_CLIENT_ID}`}\r\n        onSuccess={responseGoogle}\r\n        onFailure={responseGoogle}\r\n        render={(renderProps) => (\r\n          <div className='form-group'>\r\n            <button\r\n              onClick={renderProps.onClick}\r\n              disabled={renderProps.disabled}\r\n              className='btn-primary xsm'\r\n            >\r\n              <FontAwesomeIcon icon={faGoogle} className='google-icon' />\r\n              <span className='google-span'>Login with Google</span>\r\n            </button>\r\n          </div>\r\n        )}\r\n        cookiePolicy={\"single_host_origin\"}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Google;\r\n","C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\pages\\Facebook\\Facebook.js",[],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":2,"column":10,"nodeType":"125","messageId":"126","endLine":2,"endColumn":14},{"ruleId":"123","severity":1,"message":"124","line":2,"column":10,"nodeType":"125","messageId":"126","endLine":2,"endColumn":14},{"ruleId":"123","severity":1,"message":"124","line":2,"column":10,"nodeType":"125","messageId":"126","endLine":2,"endColumn":14},{"ruleId":"123","severity":1,"message":"124","line":2,"column":10,"nodeType":"125","messageId":"126","endLine":2,"endColumn":14},{"ruleId":"123","severity":1,"message":"127","line":2,"column":16,"nodeType":"125","messageId":"126","endLine":2,"endColumn":24},{"ruleId":"128","severity":1,"message":"129","line":23,"column":6,"nodeType":"130","endLine":23,"endColumn":8,"suggestions":"131"},{"ruleId":"123","severity":1,"message":"132","line":25,"column":24,"nodeType":"125","messageId":"126","endLine":25,"endColumn":28},{"ruleId":"123","severity":1,"message":"124","line":2,"column":10,"nodeType":"125","messageId":"126","endLine":2,"endColumn":14},{"ruleId":"123","severity":1,"message":"124","line":3,"column":10,"nodeType":"125","messageId":"126","endLine":3,"endColumn":14},{"ruleId":"123","severity":1,"message":"127","line":3,"column":16,"nodeType":"125","messageId":"126","endLine":3,"endColumn":24},{"ruleId":"123","severity":1,"message":"124","line":3,"column":10,"nodeType":"125","messageId":"126","endLine":3,"endColumn":14},{"ruleId":"123","severity":1,"message":"127","line":3,"column":16,"nodeType":"125","messageId":"126","endLine":3,"endColumn":24},{"ruleId":"123","severity":1,"message":"124","line":2,"column":10,"nodeType":"125","messageId":"126","endLine":2,"endColumn":14},{"ruleId":"123","severity":1,"message":"127","line":2,"column":16,"nodeType":"125","messageId":"126","endLine":2,"endColumn":24},{"ruleId":"123","severity":1,"message":"127","line":4,"column":10,"nodeType":"125","messageId":"126","endLine":4,"endColumn":18},{"ruleId":"123","severity":1,"message":"133","line":4,"column":10,"nodeType":"125","messageId":"126","endLine":4,"endColumn":22},{"ruleId":"123","severity":1,"message":"134","line":4,"column":24,"nodeType":"125","messageId":"126","endLine":4,"endColumn":30},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'match.params.token' and 'values'. Either include them or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.","ArrayExpression",["137"],"'show' is assigned a value but never used.","'authenticate' is defined but never used.","'isAuth' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},"Update the dependencies array to be: [match.params.token, values]",{"range":"140","text":"141"},[657,659],"[match.params.token, values]"]