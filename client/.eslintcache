[{"C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\index.js":"1","C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\App.js":"2","C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\pages\\Home\\Home.js":"3","C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\utility\\Navbar\\Navbar.js":"4","C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\utility\\Footer\\Footer.js":"5","C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\pages\\Signup\\Signup.js":"6","C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\pages\\Signin\\Signin.js":"7","C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\js\\alerts.js":"8","C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\pages\\Signup\\Activate.js":"9","C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\utility\\helper\\helpers.js":"10","C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\pages\\protected\\protect.js":"11"},{"size":219,"mtime":1609986411615,"results":"12","hashOfConfig":"13"},{"size":874,"mtime":1610413358354,"results":"14","hashOfConfig":"13"},{"size":1312,"mtime":1610215925490,"results":"15","hashOfConfig":"13"},{"size":2093,"mtime":1610414281055,"results":"16","hashOfConfig":"13"},{"size":762,"mtime":1609991582969,"results":"17","hashOfConfig":"13"},{"size":3301,"mtime":1610413180488,"results":"18","hashOfConfig":"13"},{"size":2927,"mtime":1610413183667,"results":"19","hashOfConfig":"13"},{"size":408,"mtime":1610404156429,"results":"20","hashOfConfig":"13"},{"size":1927,"mtime":1610407898984,"results":"21","hashOfConfig":"13"},{"size":1611,"mtime":1610413911977,"results":"22","hashOfConfig":"13"},{"size":147,"mtime":1610413171161,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1nkakll",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\index.js",[],["51","52"],"C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\App.js",[],"C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\pages\\Home\\Home.js",["53"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Signup from \"../Signup/Signup\";\r\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n// import { faGoogle } from \"@fortawesome/free-brands-svg-icons\";\r\n// import { library } from \"@fortawesome/fontawesome-svg-core\";\r\n// library.add(faGoogle);\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className='container'>\r\n      <div className='flex-algin-evenly margin-top'>\r\n        <header>\r\n          <h1 className='primary-heading md'>\r\n            <span className='primary-color'>G</span>\r\n            <span className='secondary-color'>o</span>\r\n            <span className='tertiary-color'>o</span>\r\n            <span className='primary-color'>g</span>\r\n            <span className='quaternary-color'>l</span>\r\n            <span className='secondary-color'>e</span>\r\n            <span className='primary-color padding'>OAuth 2.0</span>\r\n          </h1>\r\n        </header>\r\n        <section className='card-section'>\r\n          <div className='card margin-top flex-align-center'>\r\n            <h1 className='secondary-heading secondary-color md'>\r\n              Sign up to get started\r\n            </h1>\r\n            <Signup />\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Home;\r\n","C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\utility\\Navbar\\Navbar.js",[],"C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\utility\\Footer\\Footer.js",[],"C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\pages\\Signup\\Signup.js",["54"],"import React, { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { isAuth } from \"../../utility/helper/helpers\";\r\nimport { showAlert } from \"../../js/alerts\";\r\nimport axios from \"axios\";\r\n\r\nfunction Signup() {\r\n  const [values, setValues] = useState({\r\n    name: \"Denny\",\r\n    email: \"Dfeng415@yahoo.com\",\r\n    password: \"123456\",\r\n    buttonText: \"Submit\",\r\n  });\r\n\r\n  const { name, email, password, buttonText } = values;\r\n\r\n  const handleChange = (name) => (event) => {\r\n    // grab different values based on their name located in  values\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n  const handleSubmit = async (event) => {\r\n    // stop the page from reloading\r\n    event.preventDefault();\r\n    const url = `${process.env.REACT_APP_API}/signup`;\r\n    const data = { name, email, password };\r\n    // change button text when form is being submitted\r\n    setValues({ ...values, buttonText: \"Submitting\" });\r\n\r\n    // get request from backend\r\n    await axios\r\n      .post(url, data)\r\n      .then((res) => {\r\n        console.log(\"SIGN UP SUCCESSFULLY\", res);\r\n        console.log(res.data.message);\r\n        // clean state\r\n        setValues({\r\n          ...values,\r\n          name: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          buttonText: \"Submitted\",\r\n        });\r\n        // toast.success(res.data.message);\r\n        if (res.data.status === \"success\") {\r\n          showAlert(\"success\", res.data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"SIGN UP ERROR\", err.response.data.message);\r\n\r\n        setValues({\r\n          ...values,\r\n          buttonText: \"Submit\",\r\n        });\r\n\r\n        showAlert(\"error\", err.response.data.message);\r\n      });\r\n  };\r\n\r\n  const SignupForm = () => {\r\n    return (\r\n      <form>\r\n        <div className='form-group'>\r\n          <label htmlFor='name' className='form-label xsm'>\r\n            Name\r\n          </label>\r\n          <input\r\n            onChange={handleChange(\"name\")}\r\n            value={name}\r\n            id='name'\r\n            type='text'\r\n            className='form-input'\r\n            name='name'\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <label htmlFor='email' className='form-label xsm'>\r\n            Email\r\n          </label>\r\n          <input\r\n            onChange={handleChange(\"email\")}\r\n            value={email}\r\n            id='email'\r\n            type='email'\r\n            className='form-input'\r\n            name='email'\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <label htmlFor='password' className='form-label xsm'>\r\n            Password\r\n          </label>\r\n          <input\r\n            onChange={handleChange(\"password\")}\r\n            value={password}\r\n            id='password'\r\n            type='password'\r\n            className='form-input'\r\n            name='password'\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <button className='btn-primary xsm' onClick={handleSubmit}>\r\n            {buttonText}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isAuth() ? <Redirect to='/protected' /> : null}\r\n      {SignupForm()}\r\n    </div>\r\n  );\r\n}\r\nexport default Signup;\r\n","C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\pages\\Signin\\Signin.js",["55"],"import React, { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { authenticate, isAuth } from \"../../utility/helper/helpers\";\r\nimport { showAlert } from \"../../js/alerts\";\r\nimport axios from \"axios\";\r\n\r\nfunction Signin() {\r\n  const [values, setValues] = useState({\r\n    email: \"Dfeng415@yahoo.com\",\r\n    password: \"123456\",\r\n    buttonText: \"Submit\",\r\n  });\r\n\r\n  const { email, password, buttonText } = values;\r\n\r\n  const handleChange = (name) => (event) => {\r\n    // grab different values based on their name located in  values\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n  const handleSubmit = async (event) => {\r\n    // stop the page from reloading\r\n    event.preventDefault();\r\n    const url = `${process.env.REACT_APP_API}/signin`;\r\n    const data = { email, password };\r\n    // change button text when form is being submitted\r\n    setValues({ ...values, buttonText: \"Submitting\" });\r\n\r\n    // get request from backend\r\n    await axios\r\n      .post(url, data)\r\n      .then((res) => {\r\n        console.log(\"SIGNIN SUCCESSFULLY\", res);\r\n        authenticate(res, () => {\r\n          // clean state\r\n          setValues({\r\n            ...values,\r\n            email: \"\",\r\n            password: \"\",\r\n            buttonText: \"Submitted\",\r\n          });\r\n\r\n          if (res.data.status === \"success\") {\r\n            showAlert(\"success\", `Hey ${res.data.user.name}, Welcome back!`);\r\n          }\r\n        });\r\n      })\r\n\r\n      .catch((err) => {\r\n        console.log(\"SIGNIN ERROR\", err);\r\n\r\n        setValues({\r\n          ...values,\r\n          buttonText: \"Submit\",\r\n        });\r\n        showAlert(\"error\", err.response.data.message);\r\n      });\r\n  };\r\n\r\n  const SigninForm = () => {\r\n    return (\r\n      <form>\r\n        <div className='form-group'>\r\n          <label htmlFor='email' className='form-label xsm'>\r\n            Email\r\n          </label>\r\n          <input\r\n            onChange={handleChange(\"email\")}\r\n            value={email}\r\n            id='email'\r\n            type='email'\r\n            className='form-input'\r\n            name='email'\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <label htmlFor='password' className='form-label xsm'>\r\n            Password\r\n          </label>\r\n          <input\r\n            onChange={handleChange(\"password\")}\r\n            value={password}\r\n            id='password'\r\n            type='password'\r\n            className='form-input'\r\n            name='password'\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <button className='btn-primary xsm' onClick={handleSubmit}>\r\n            {buttonText}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* check if user is signed in  */}\r\n      {isAuth() ? <Redirect to='/protected' /> : null}\r\n      {SigninForm()}\r\n    </div>\r\n  );\r\n}\r\nexport default Signin;\r\n","C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\js\\alerts.js",[],"C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\pages\\Signup\\Activate.js",["56","57","58","59"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { showAlert } from \"../../js/alerts\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport axios from \"axios\";\r\n\r\n// match comes from browser router\r\nfunction Activate({ match }) {\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    token: \"\",\r\n    show: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    // App.js path='/auth/activate/:token'\r\n    let token = match.params.token;\r\n    // grab the users name from the registered token data\r\n    let { name } = jwt.decode(token);\r\n    if (token) {\r\n      setValues({ ...values, name, token });\r\n    }\r\n  }, []);\r\n\r\n  const { name, token, show } = values;\r\n\r\n  const handleSubmit = async (event) => {\r\n    // stop the page from reloading\r\n    event.preventDefault();\r\n    const url = `${process.env.REACT_APP_API}/account-activation`;\r\n    const data = { token };\r\n    // get request from backend\r\n    await axios\r\n      .post(url, data)\r\n      .then((res) => {\r\n        console.log(\"Account has been activated\", res);\r\n        console.log(res.data.message);\r\n        // clean state\r\n        setValues({\r\n          ...values,\r\n          show: false,\r\n        });\r\n        // toast.success(res.data.message);\r\n        if (res.data.status === \"success\") {\r\n          showAlert(\"success\", res.data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"ACCOUNT ACTIVATION ERROR\", err.response.data.message);\r\n        showAlert(\"error\", err.response.data.message);\r\n      });\r\n  };\r\n\r\n  const activationLink = () => {\r\n    return (\r\n      <div className='form-group'>\r\n        <h1>Hello {name}, please activate your account to get started! </h1>\r\n        <button class='btn-primary xsm' onClick={handleSubmit}>\r\n          Activate Account\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return <div>{activationLink()}</div>;\r\n}\r\nexport default Activate;\r\n","C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\utility\\helper\\helpers.js",[],"C:\\Users\\dfeng\\OneDrive\\Desktop\\React_Refact\\Google_OAuth\\client\\src\\pages\\protected\\protect.js",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":2,"column":10,"nodeType":"66","messageId":"67","endLine":2,"endColumn":14},{"ruleId":"64","severity":1,"message":"65","line":2,"column":10,"nodeType":"66","messageId":"67","endLine":2,"endColumn":14},{"ruleId":"64","severity":1,"message":"65","line":2,"column":10,"nodeType":"66","messageId":"67","endLine":2,"endColumn":14},{"ruleId":"64","severity":1,"message":"65","line":2,"column":10,"nodeType":"66","messageId":"67","endLine":2,"endColumn":14},{"ruleId":"64","severity":1,"message":"68","line":2,"column":16,"nodeType":"66","messageId":"67","endLine":2,"endColumn":24},{"ruleId":"69","severity":1,"message":"70","line":23,"column":6,"nodeType":"71","endLine":23,"endColumn":8,"suggestions":"72"},{"ruleId":"64","severity":1,"message":"73","line":25,"column":24,"nodeType":"66","messageId":"67","endLine":25,"endColumn":28},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'match.params.token' and 'values'. Either include them or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.","ArrayExpression",["76"],"'show' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},"Update the dependencies array to be: [match.params.token, values]",{"range":"79","text":"80"},[657,659],"[match.params.token, values]"]